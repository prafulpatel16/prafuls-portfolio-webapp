name: Deploy to AWS

on:
  push:
    branches:
      - master  # Adjust branch name as needed

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required to generate OIDC token
      contents: read   # Required to read repo contents

    steps:

      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::202533534284:role/awsGitHubActionsprafulswebAppRole
          aws-region: us-east-1

      # Step 3: Install Python 3.8
      - name: Install Python 3.8
        run: |
          sudo apt-get update
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt-get update
          sudo apt-get install -y python3.8 python3.8-distutils python3-pip
          python3.8 --version

      # Step 4: Set Python 3.8 as Default
      - name: Set Python 3.8 as Default
        run: |
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1
          sudo update-alternatives --set python /usr/bin/python3.8
          python --version

      # Step 5: Install SAM CLI
      - name: Install SAM CLI
        run: |
          pip3 install aws-sam-cli
          sam --version

      # Step 6: Build the SAM application
      - name: Build SAM Application
        env:
          SAM_CLI_TELEMETRY: 0
          PYTHONPATH: /usr/bin/python3.8
        run: |
          sam build --template-file prafuls-webapp/template.yaml --build-dir .aws-sam/build

      # Step 7: Deploy SAM Application
      - name: Deploy SAM Application
        run: |
          sam deploy --template-file .aws-sam/build/template.yaml \
                     --stack-name prafuls-serverless-app \
                     --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
                     --no-confirm-changeset --region us-east-1 \
                     --resolve-s3

      # Step 8: Fetch CloudFormation Outputs
      - name: Fetch CloudFormation Outputs
        id: fetch-s3-buckets
        run: |
          S3_STATIC_BUCKET=$(aws cloudformation describe-stacks \
            --stack-name prafuls-serverless-app \
            --query "Stacks[0].Outputs[?OutputKey=='StaticWebsiteBucketName'].OutputValue" \
            --output text)
          RESUME_BUCKET=$(aws cloudformation describe-stacks \
            --stack-name prafuls-serverless-app \
            --query "Stacks[0].Outputs[?OutputKey=='ResumeBucketArn'].OutputValue" \
            --output text | cut -d':' -f6)
          echo "S3_STATIC_BUCKET=$S3_STATIC_BUCKET" >> $GITHUB_ENV
          echo "RESUME_BUCKET=$RESUME_BUCKET" >> $GITHUB_ENV

      # Step 9: Upload Static Site to S3
      - name: Upload Static Site to S3
        run: |
          echo "Deploying to S3 Bucket: $S3_STATIC_BUCKET"
          if [ -z "$S3_STATIC_BUCKET" ]; then
            echo "Error: S3_STATIC_BUCKET is not set. Ensure your CloudFormation stack has been deployed.";
            exit 1;
          fi
          aws s3 sync prafuls-webapp/static-site s3://$S3_STATIC_BUCKET --delete

      # Step 10: Upload Resume to ResumeBucket
      - name: Upload Resume to ResumeBucket
        run: |
          echo "Uploading Resume to S3 Bucket: $RESUME_BUCKET"
          if [ -z "$RESUME_BUCKET" ]; then
            echo "Error: RESUME_BUCKET is not set. Ensure your CloudFormation stack has been deployed.";
            exit 1;
          fi
          aws s3 cp prafuls-webapp/static-site/sample_resume.pdf s3://$RESUME_BUCKET/
